version: "3.9"

services:
  order:
    build:
      dockerfile: Dockerfile
      context: ./order
    ports:
      - "8080:8080"
    environment:
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "postgres"
    depends_on:
      - orderdb
      - kafka


  oubox:
    build:
      dockerfile: Dockerfile
      context: ./outbox
    ports:
      - "8081:8081"
    environment:
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "postgres"
    depends_on:
      - outboxdb
      - kafka

  orderdb:
    image: postgres:latest
    environment:
      POSTGRES_DB: "order"
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "postgres"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - "5433:5432"
    volumes:
      - .:/docker-entrypoint-initdb.d
      - order-data:/var/lib/postgresql/data
    restart: always

  outboxdb:
    image: postgres:latest
    environment:
      POSTGRES_DB: "outbox"
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "postgres"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - "5435:5432"
    volumes:
      - .:/docker-entrypoint-initdb.d
      - outbox-data:/var/lib/postgresql/data
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  order-data:
  outbox-data: